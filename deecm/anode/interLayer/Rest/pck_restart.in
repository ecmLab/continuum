###### DFE Method to compute Particle distribution under pressure #######
### Define Variables
clear   					# Clear all previous runs

# parameters of the box
variable  sxy    equal 0.75
variable  sz     equal 2
variable  imdl   equal 1
variable  tarp   equal 11                        # The target pressure to stop the packing
# parameter of material contact
variable  kn_11  equal 175661.4
variable  kn_22  equal 148.148
variable  kn_12  equal 82054.3
variable  kn_x3  equal 1000000
variable  kt_11  equal 203681.0
variable  kt_22  equal 186.046
variable  kt_12  equal 99.20
variable  kt_x3  equal 100000
variable  gma_n  equal 1000
variable  xmu    equal 8
### Environment Setup
units         micro           # micro unit system is suitable for the current research
atom_style    sphere  1        # Granular Particle method will be used
boundary      fm fm fm           # Periodic condition in x and y directions, fixed condition in z direction
comm_modify   vel yes         # Communicate velocity info with ghost atoms
neighbor      0.0001 bin         # 0.2 micron extra distance beyond force cutoff
neigh_modify  every 3 delay 0   # Update the neighbor list every step
timestep      0.00001          # Time step is in unit micro-seconds

### Geometry Definition
read_restart pack_dynamic.restart
group  ptc  type  1 2
group  ag   type  1
group  ac   type  2
group  gst  type  3

### Granular Force Fields Definition
### normal repulsion elastic constant K_n is in unit kPa;
### Elastic constant are decrease to 1/1000 of physical value to decay kinetic energy quickly
### viscoelastic damping constant for normal contact 1000;
### viscoelastic damping constant for tangential contact gamma_t(NULL) = 1/2* gamma_n;
### static yield criterion 0.5, and tangential damping force is excluded
pair_style gran/hertz/history ${kn_11} ${kt_11} ${gma_n} NULL ${xmu} 1
pair_coeff 1 1
pair_style gran/hertz/history ${kn_22} ${kt_22} ${gma_n} NULL ${xmu} 1
pair_coeff 2 2
pair_style gran/hertz/history ${kn_12} ${kt_12} ${gma_n} NULL ${xmu} 1
pair_coeff 1 2
pair_style gran/hertz/history ${kn_x3} ${kt_x3} ${gma_n} NULL ${xmu} 1
pair_coeff 1 3
pair_style gran/hertz/history ${kn_x3} ${kt_x3} ${gma_n} NULL ${xmu} 1
pair_coeff 2 3
pair_style gran/hertz/history ${kn_x3} ${kt_x3} ${gma_n} NULL ${xmu} 1
pair_coeff 3 3

### Calculation setup
## NVE emsemble with gravity
fix 1 all nve/sphere                             # NVE ensemble for Granular system
## Gravity is necessary for pour
fix 3 gst move linear 0 0 0              # Apply constant velosity on ghost particle in z direction, in unit micron/micro-second

## Define the wall in z direction because only z direction is non-periodic
# Ag to Wall
fix x1wll ag wall/gran hertz/history ${kn_x3} ${kt_x3} ${gma_n} NULL ${xmu} 1 xplane 0.0 ${sxy}
fix y1wll ag wall/gran hertz/history ${kn_x3} ${kt_x3} ${gma_n} NULL ${xmu} 1 yplane 0.0 ${sxy}
fix z1wll ag wall/gran hertz/history ${kn_x3} ${kt_x3} ${gma_n} NULL ${xmu} 1 zplane 0.0 ${sz}
# aC to Wall
fix x2wll ac wall/gran hertz/history ${kn_x3} ${kt_x3} ${gma_n} NULL ${xmu} 1 xplane 0.0 ${sxy}
fix y2wll ac wall/gran hertz/history ${kn_x3} ${kt_x3} ${gma_n} NULL ${xmu} 1 yplane 0.0 ${sxy}
fix z2wll ac wall/gran hertz/history ${kn_x3} ${kt_x3} ${gma_n} NULL ${xmu} 1 zplane 0.0 ${sz}

### OUTPUT results to Screen
compute        ker   all   erotate/sphere                  # Compute the rotational kinetic energy of all particles
compute        frc   gst   reduce sum fz                   # Total pressure on ghost particles
variable       mss  equal  mass(ptc) 		           # Total mass of Ag and aC particles
variable       prs  equal  (c_frc)/(1000*${sxy}*${sxy})    # Pressure in unit of MPa
compute        posw  gst   reduce ave z
variable       posz equal  c_posw
# Print info to screen, include step, total atom number, kinetic nergy, compute_1(Rotational energy), volume
thermo_style    custom step atoms ke c_ker vol v_prs c_posw
thermo          1000                              # Print thermodynamics every 500 stimesteps
thermo_modify   lost ignore norm no
compute_modify  thermo_temp dynamic/dof yes



variable  nt equal 0
variable  nt1 equal 0.015

variable  rho_ag equal 1.738 #10.49                        # density of Ag particles
variable  rho_li equal 0.53                         # density of Li particles
variable  pm_ag  equal 24.3050 #107.8682                     # molecular weight of Ag particles
variable  pm_li  equal 6.941                        # molecular weight of Li particles
variable  rat_rho equal ${rho_ag}/${rho_li}
variable  rat_pm  equal ${pm_li}/${pm_ag}
variable  x_li  equal 0

variable  ag_dia0 equal 0.02                       # The initial diameter of Ag particles, in unit um
variable  ag_vol  equal ${ag_dia0}^3              # The initial diameter of Ag particles, in unit um

variable  ag_diaf equal ${ag_dia0}*1.2              # The final diameter of Ag particles, in unit um
variable  ag_tf  equal 1.2                        # The ratio of final Ag diameter to initial diameter
variable  Ngrw   equal 1000 		                    # The timesteps to update each Ag diameter growth
variable  dDia   equal (${ag_tf}-1)*${ag_dia0}/100 # The incremental of Ag diameter each Ngrw timesteps

variable  maxp   equal 20.0                        # The max pressure to stop the Ag growth

variable  incr   equal 2                        # The max pressure to stop the Ag growth

#region reg1 block -0.01 0.76 -0.01 0.76 ${nt} ${nt1} units box

dump	3 all custom 10000 postMg_dynamic/dump*.lmp id type x y z vx vy vz fx fy fz radius mass

label loop
  
  region reg1 block -0.01 0.76 -0.01 0.76 ${nt} ${nt1} units box
  group cotag dynamic ag region reg1
  variable  x_li  equal ${x_li}-0.5

  label loop5
    variable Vf equal ${x_li}*${rat_rho}*${rat_pm}*${ag_vol}
    variable Vt equal ${Vf}+${ag_vol}
    variable d_new equal ${Vt}^(1/3)
    fix 3 gst move linear 0 0 0.0
    variable  ag_dia  equal  ${d_new}            # set the diameter of the Ag to an increamental 
    set  group cotag diameter ${ag_dia}
    run  ${Ngrw}
    variable x_li equal ${x_li}+0.05
    #compute ccag cotag contact/atom 
    #dump	4 ag custom 2000 postn/contact*.lmp id c_ccag c_ccag[1]

    if "${prs} > ${maxp}" then "jump pck_restart.in loop6"
    if "${x_li} > ${incr}" then "jump pck_restart.in loop7"
    jump pck_restart.in loop5

  label loop6
    fix 2 gst move linear 0 0 0.04
    run  ${Ngrw}
    if "${prs} > ${maxp}" then "jump pck_restart.in loop6"
    unfix 2
    jump pck_restart.in loop5

  label loop7
   
  variable  nt equal ${nt}+0.0151
  variable  nt1 equal ${nt1}+0.015
  variable  incr equal ${incr}-0.05
    if "${nt} > ${posz}" then "jump pck_restart.in loopf"
  region reg1 delete
  group cotag delete
jump pck_restart.in loop

label loopf
run 1000
write_restart rest.restart
