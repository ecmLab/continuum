#------------------General Settings for Granular Systems--------------------------------------------
atom_style	granular
atom_modify	map           array
boundary	f f f
newton		off
communicate	single        vel       yes
units		si
neighbor        0.0002        bin
neigh_modify    delay         0
echo            both
variable        dt            equal     1e-5
variable        nStepsRun     equal     1.0/${dt}
variable        writeOutEvery equal     0.2/${dt}
variable        thermofreq    equal     0.01/${dt}
timestep        ${dt}

#--------------------------Box Information---------------------------------------------------------
variable       skfstl        equal     1/5000
variable       x1y1          equal    -1*${skfstl}*2500
variable       x2y2          equal     1*${skfstl}*2500
variable       z1            equal    -0.5*${skfstl}*2500
variable       z2            equal     1*${skfstl}*2500

#--------------------------Model Geometry---------------------------------------------------------
variable        r0            equal     0.02
variable        grwth         equal     0.01                   # Overall growth of each direction
variable        grwFq         equal     1000                    # The growth frequncy, every # of steps
variable        grwNs         equal     20                      # The total number of growth step
variable        grwRt         equal     ${grwth}/${grwNs}       # Growth rate at each growth step

#--------------------------Material Information---------------------------------------------------------
variable        cf_pp         equal     1.0
variable        cf_pw         equal     0.2
variable        cf_ww         equal     0.2
variable        cof_pp        equal     0.2
variable        cof_pw        equal     0.1
variable        cof_ww        equal     0.1
variable        corf_pp       equal     0.
variable        corf_pw       equal     0.2
variable        corf_ww       equal     0.2
variable        Yp            equal     1e+7
variable        Yw            equal     5.1e+6

#---------------------Generate Box----------------------------------------
#region          reg block ${x1y1} ${x2y2} ${x1y1} ${x2y2} ${z1} ${z2}  units box
#create_box      2 reg
read_restart    pack.restart

#---------------------Assign Material Properties to particle and wall----------------------------------------
fix 		m1 all property/global youngsModulus peratomtype ${Yp} ${Yw}
fix 		m2 all property/global poissonsRatio peratomtype 0.3 0.3
fix 		m3 all property/global coefficientRestitution peratomtypepair 2 ${cf_pp} ${cf_pw} ${cf_pw} ${cf_ww}
fix             m4 all property/global coefficientFriction peratomtypepair 2 ${cof_pp} ${cof_pw} ${cof_pw} ${cof_ww}
fix             m5 all property/global coefficientRollingFriction peratomtypepair 2 ${corf_pp} ${corf_pw} ${corf_pw} ${corf_ww}
fix             m6 all property/global cohesionEnergyDensity peratomtypepair 2 500 0 0 0

#Define pair style
pair_style gran model hertz tangential history cohesion sjkr #Hertzian with cohesion
pair_coeff	* *

#fix Bsphere all mesh/surface file sphere.stl type 2 scale 0.0125
#fix wall all wall/gran model hertz tangential history rolling_friction epsd2 mesh n_meshes 1 meshes Bsphere

fix xwalls1 all wall/gran model hertz tangential history primitive type 1 xplane ${x1y1}
fix xwalls2 all wall/gran model hertz tangential history primitive type 1 xplane ${x2y2}
fix ywalls1 all wall/gran model hertz tangential history primitive type 1 yplane ${x1y1}
fix ywalls2 all wall/gran model hertz tangential history primitive type 1 yplane ${x2y2}
fix zwalls2 all wall/gran model hertz tangential history primitive type 1 zplane ${z1}

#fix pts1 all particletemplate/sphere 15485863 atom_type 1 density constant 2500 radius constant ${r0}
#fix pdd1 all particledistribution/discrete 86028157 1 pts1 1

#fix ins_mesh all mesh/surface/planar file ins_face.stl heal auto_remove_duplicates type 2 scale 0.0125
#fix ins all insert/stream seed 86028121 distributiontemplate pdd1 & 
#                maxattempt 200 nparticles 1200 particlerate 180 overlapcheck yes all_in yes vel constant 0 0 -2.0 & 
#                insertion_face ins_mesh extrude_length 0.2 

#apply nve integration to all particles 
fix		integr all nve/sphere 
fix		gravi all  gravity 9.81 vector 0.0 0.0 -1.0

#------------------------Output Settings------------------------------------------------------
# Output to screen
compute        ker   all   erotate/sphere            # Compute the rotational kinetic energy of all particles
compute        prs   all   pressure thermo_temp                  # Total pressure on ghost particles
thermo_style	custom step atoms ke c_ker vol c_prs
thermo		${thermofreq}
thermo_modify	lost ignore norm no
# Output to file
dump              2 all custom ${writeOutEvery} post/cohesion.lmp id type x y z radius fx fy fz
dump_modify       2 format "%7.0g %4.0g %15.10g %15.10g %15.10g %15.10g %15.10g %15.10g %15.10g"
#dump		dmp all custom/vtk ${writeOutEvery} post/dump*.sphere.vtk type mass x y z id vx vy vz fx fy fz omegax omegay omegaz radius 
#dump            dumpSphere all stl ${writeOutEvery} post/dump_Sphere*.stl Bsphere

#------------------------Run the calculation------------------------------------------------------
# 1. Run first period: relax the system
run		${nStepsRun}
# 2. Run second period: growth the particle in all direction
#variable          nt   equal    1
#label  loop2
#  variable        da    equal   ${a0}+${nt}*${grwRt}
#  variable        db    equal   ${b0}-${nt}*${grwRt}
#  variable        dc    equal   ${c0}+${nt}*${grwRt}
#  set             type  1  shape  ${da}  ${db}  ${dc}  
#  run		  ${writeOutEvery}
#  variable        nt    equal   ${nt}+1
#  if "${nt} > ${grwNs}" then "jump cycle.in loop3"
#jump cycle.in loop2
# 3. Run third period: shrink in all direction
#label loop3
#  variable        da    equal   0.02-(${nt}-${grwNs})*${grwRt}
#  variable        db    equal   0.03+(${nt}-${grwNs})*${grwRt}
#  variable        dc    equal   0.02-(${nt}-${grwNs})*${grwRt}
#  set             type  1  shape  ${da}  ${db}  ${dc}  
#  run		  ${writeOutEvery}
#  variable        nt    equal   ${nt}+1
#  if "${nt} > 40" then "jump cycle.in loop4"
#jump cycle.in loop3
# 3. End of run
#label loop4
write_restart   cohesion.restart
